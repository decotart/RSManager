// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSManager.DataBase;

#nullable disable

namespace RSManager.Migrations
{
    [DbContext(typeof(RepairShopContext))]
    [Migration("20240606181703_AddWorksInformationEdited")]
    partial class AddWorksInformationEdited
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("RSManager.DataBase.Autorization", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Autorization", (string)null);
                });

            modelBuilder.Entity("RSManager.DataBase.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HorsePower")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RSManager.DataBase.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RSManager.DataBase.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartSum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SuitableCar")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SuitableCar");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("RSManager.DataBase.PartsBrandsView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PartSum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PartsBrandsView");
                });

            modelBuilder.Entity("RSManager.DataBase.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Car")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Client")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SumOfWork")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Worker")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Car");

                    b.HasIndex("Client");

                    b.HasIndex("Worker");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("RSManager.DataBase.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE");

                    b.Property<int>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("RSManager.DataBase.WorksInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SuOfWork")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Worker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorksInformation");
                });

            modelBuilder.Entity("RSManager.DataBase.WorksInformationEdited", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SuOfWork")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Worker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorksInformationEdited");
                });

            modelBuilder.Entity("RSManager.DataBase.WorksPart", b =>
                {
                    b.Property<int>("WorksId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountOfParts")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorksId", "PartId");

                    b.HasIndex("PartId");

                    b.ToTable("Works_Parts", (string)null);
                });

            modelBuilder.Entity("RSManager.DataBase.Part", b =>
                {
                    b.HasOne("RSManager.DataBase.Car", "SuitableCarNavigation")
                        .WithMany("Parts")
                        .HasForeignKey("SuitableCar")
                        .IsRequired();

                    b.Navigation("SuitableCarNavigation");
                });

            modelBuilder.Entity("RSManager.DataBase.Work", b =>
                {
                    b.HasOne("RSManager.DataBase.Car", "CarNavigation")
                        .WithMany("Works")
                        .HasForeignKey("Car")
                        .IsRequired();

                    b.HasOne("RSManager.DataBase.Client", "ClientNavigation")
                        .WithMany("Works")
                        .HasForeignKey("Client")
                        .IsRequired();

                    b.HasOne("RSManager.DataBase.Worker", "WorkerNavigation")
                        .WithMany("Works")
                        .HasForeignKey("Worker")
                        .IsRequired();

                    b.Navigation("CarNavigation");

                    b.Navigation("ClientNavigation");

                    b.Navigation("WorkerNavigation");
                });

            modelBuilder.Entity("RSManager.DataBase.WorksPart", b =>
                {
                    b.HasOne("RSManager.DataBase.Part", "Part")
                        .WithMany("WorksParts")
                        .HasForeignKey("PartId")
                        .IsRequired();

                    b.HasOne("RSManager.DataBase.Work", "Works")
                        .WithMany("WorksParts")
                        .HasForeignKey("WorksId")
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("RSManager.DataBase.Car", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("RSManager.DataBase.Client", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("RSManager.DataBase.Part", b =>
                {
                    b.Navigation("WorksParts");
                });

            modelBuilder.Entity("RSManager.DataBase.Work", b =>
                {
                    b.Navigation("WorksParts");
                });

            modelBuilder.Entity("RSManager.DataBase.Worker", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
